name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    # runs-on: ubuntu-latest
    # build-matrix:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        include:
        - os: windows-latest
          generator: "Visual Studio 17"
          name: "Bomberman_win"
        - os: ubuntu-latest
          generator: "Unix Makefiles"
          name: "Bomberman_linux"
          conanOptions: " -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True"
    
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Install Conan
      id: conan
      uses: turtlebrowser/get-conan@main
      with:
        version: 1.59.0

    - name: Create default profile
      run: conan profile new default --detect

    - name: Update profile
      run: conan profile update settings.compiler.libcxx=libstdc++11 default


    - name: Install dependencies
      run: conan install . -s build_type=${{env.BUILD_TYPE}} --install-folder=${{github.workspace}}/build --build=missing ${{matrix.conanOptions}}

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      # OpenGL_GL_PREFERENCE : GLVND
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G "${{matrix.generator}}"

    - name: Builds
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Archive executable
      uses: actions/upload-artifact@v3
      with:
        name: ${{matrix.name}}
        path: ${{github.workspace}}/bin
